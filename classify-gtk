#!/usr/bin/python
# Copyright 2014 Douglas Bagnall <douglas@halo.gen.nz> LGPL
import argparse
from gtkdisplay import run

from classify import GTKClassifier, gst_init
from classify import add_common_args, process_common_args

def main():
    gst_init()
    parser = argparse.ArgumentParser()
    prop_names = add_common_args(parser)
    parser.add_argument('-C', '--first-n', type=int, default=0,
                        help="look at this many files from the audio directory")
    parser.add_argument('-R', '--reverse', action='store_true',
                        help="reverse the order of classes")
    parser.add_argument('files', metavar='FILE', nargs='*',
                        help='files to process before --audio-directory')
    parser.add_argument('--min-changes', type=int, default=0,
                        help="only test files with at least this many class switches")
    parser.add_argument('-M', '--microphone', action="store_true",
                        help="Use the microphone instead of files")
    parser.add_argument('--full-screen', action="store_true",
                        help="Use the entire screen")

    args = parser.parse_args()

    if args.microphone:
        c = GTKClassifier(sinkname='fakesink', srcname='autoaudiosrc')
        process_common_args(c, args, prop_names, timed=False, load_files=False)
        run(c, [], args.reverse)
    else:
        c = GTKClassifier(sinkname='autoaudiosink', srcname='filesrc',
                          filetype=args.filetype)
        if args.min_changes:
            files = process_common_args(c, args, prop_names, timed=True)
            files = [x for x in files
                     if len(x.timings) >= args.min_changes]
        else:
            #by default ignore timings
            files = process_common_args(c, args, prop_names, timed=False)

        files = args.files[:] + [x.fullname for x in files]
        run(c, files, args.reverse, args.full_screen)

main()
