#!/usr/bin/python3

from collections import Counter
import sys
import argparse
import math

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-q', '--short', action="store_true",
                        help="one-line view")
    parser.add_argument('-c', '--case-sensitive', action="store_true",
                        help="treat upper and lower case separately")
    parser.add_argument('-t', '--threshold', type=float, default=1e-4,
                        help='threshold of alphabet inclusion')
    parser.add_argument('files', help='process these files', nargs='+')
    args = parser.parse_args()

    chars = Counter()
    for fn in args.files:
        f = open(fn)
        s = ' '.join(f.read().split())
        if not args.case_sensitive:
            s = s.lower()
        f.close()
        chars.update(s)
    if args.short:
        threshold = math.ceil(args.threshold * len(s))

        print('%-30s: {{%s}} {{%s}}' % (' '.join(args.files),
                                        '' .join(c for c, n in chars.most_common()
                                                 if n >= threshold),
                                        '' .join(c for c, n in chars.most_common()
                                                 if n < threshold)))
    else:
        i = 1
        for c, n in chars.most_common():
            print("%2d '%s' %10d %10.3g" % (i, c, n, float(n) / len(s)))
            i += 1
        print(''.join(c for c, n in chars.most_common()))



main()
